{"version":3,"sources":["assets/loading.gif","components/Home.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loadingGif","require","Home","useState","undefined","mostRecent","setMostRecent","searchedVideos","setSearchedVideos","fourthColumn","setFourthColumn","searchVal","setSearchVal","showOnlySearch","setShowOnlySearch","noResults","setNoResults","modalTitle","setModalTitle","modalVideo","setModalVideo","modalDescription","setModalDescription","modalChannelTitle","setModalChannelTitle","show","setShow","loading","setLoading","useEffect","a","console","log","axios","get","data","getData","handleClose","handleShow","title","video","description","channelTitle","handleSubmit","event","preventDefault","search","target","elements","method","url","keyword","value","items","length","handleNext","pageToken","nextPageToken","handleNextUploads","handlePrevious","prevPageToken","handlePreviousUploads","className","width","src","alt","onSubmit","required","type","name","id","placeholder","onClick","map","item","key","videoId","snippet","thumbnails","medium","Modal","onHide","Header","closeButton","Title","Body","frameborder","allow","allowfullscreen","Footer","Button","variant","resourceId","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","style","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af3fd15c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.6e5d6096.gif\";","// basic imports\nimport React, { useState, useEffect } from \"react\";\n//css imports\nimport \"../App.css\";\nimport { Button, Modal } from \"react-bootstrap\";\n//npm package imports\nimport axios from \"axios\";\nconst loadingGif = require('../assets/loading.gif');\nfunction Home() {\n  //state for video listings\n  const [mostRecent, setMostRecent] = useState(undefined);\n  const [searchedVideos, setSearchedVideos] = useState(undefined);\n  //state for changing grid\n  const [fourthColumn, setFourthColumn] = useState(false);\n  //stat for search inputs\n  const [searchVal, setSearchVal] = useState();\n  const [showOnlySearch, setShowOnlySearch] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  //state for modal\n  const [modalTitle, setModalTitle] = useState();\n  const [modalVideo, setModalVideo] = useState();\n  const [modalDescription, setModalDescription] = useState();\n  const [modalChannelTitle, setModalChannelTitle] = useState();\n  const [show, setShow] = useState(false);\n  //state for loading data\n  const [loading, setLoading] = useState(true);\n\n  //lifecycle methods\n  useEffect(() => {\n    async function getData() {\n      try {\n        console.log(\"enter use effect\");\n        // const { data } = await axios.get(\"http://localhost:5000/api/channel\");\n        const { data } = await axios.get(\"https://youtube-app-server-app.herokuapp.com/api/channel\");\n\n        console.log(\"data is\", data);\n        setMostRecent(data);\n        setLoading(false);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    getData();\n  }, []);\n\n  //function to close modal\n  const handleClose = () => setShow(false);\n  //function to show modal\n  const handleShow = (title, video, description, channelTitle) => {\n    setShow(true);\n    setModalTitle(title);\n    setModalVideo(video);\n    setModalDescription(description);\n    setModalChannelTitle(channelTitle);\n  };\n\n  //function to submit search form\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { search } = event.target.elements;\n    try {\n      console.log(\"enter search function\");\n      const { data } = await axios({\n        method: \"POST\",\n        // url: \"http://localhost:5000/api/channel/search\",\n        url: \"https://youtube-app-server-app.herokuapp.com/api/channel/search\",\n        data: {\n          keyword: search.value,\n        },\n      });\n      console.log(\"searched data is\", data);\n      setShowOnlySearch(true);\n      setSearchedVideos(data);\n      if(data.items.length==0) {\n          setNoResults(true);\n      } else {\n          setNoResults(false);\n      }\n      setSearchVal(search.value);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //function to go to next page for searched videos\n  const handleNext = async () => {\n    try {\n      console.log(\"enter use effect\");\n      const { data } = await axios({\n        method: \"POST\",\n        // url: \"http://localhost:5000/api/channel/search\",\n        url: \"https://youtube-app-server-app.herokuapp.com/api/channel/search\",\n\n        data: {\n          keyword: searchVal,\n          pageToken: searchedVideos.nextPageToken,\n          // part:'snippet',\n          // playlistId:'UUzb8YnyvIzyRLGXARpUAZlg',\n          // key:'AIzaSyBKzTK79JJ_2CWcaiD-hFHXVNLSLUhpNq0',\n          // maxResults:5\n        },\n      });\n      console.log(\"searched data is\", data);\n      setSearchedVideos(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //function to see more videos of the channel\n  const handleNextUploads = async () => {\n    try {\n      console.log(\"enter use effect\");\n      const { data } = await axios({\n        method: \"POST\",\n        // url: \"http://localhost:5000/api/channel/page\",\n        url: \"https://youtube-app-server-app.herokuapp.com/api/channel/page\",\n\n        data: {\n          //   keyword: searchVal,\n          pageToken: mostRecent.nextPageToken,\n          // part:'snippet',\n          // playlistId:'UUzb8YnyvIzyRLGXARpUAZlg',\n          // key:'AIzaSyBKzTK79JJ_2CWcaiD-hFHXVNLSLUhpNq0',\n          // maxResults:5\n        },\n      });\n      console.log(\"more uploads are\", data);\n      setMostRecent(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //function to go to previous page for searched videos\n  const handlePrevious = async () => {\n    try {\n      console.log(\"enter use effect\");\n      const { data } = await axios({\n        method: \"POST\",\n        // url: \"http://localhost:5000/api/channel/search\",\n        url: \"https://youtube-app-server-app.herokuapp.com/api/channel/search\",\n\n        data: {\n          keyword: searchVal,\n          pageToken: searchedVideos.prevPageToken,\n          // part:'snippet',\n          // playlistId:'UUzb8YnyvIzyRLGXARpUAZlg',\n          // key:'AIzaSyBKzTK79JJ_2CWcaiD-hFHXVNLSLUhpNq0',\n          // maxResults:5\n        },\n      });\n      console.log(\"searched data is\", data);\n      setSearchedVideos(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //funtion for previous page of all uploads\n  const handlePreviousUploads = async () => {\n    try {\n      console.log(\"enter use effect\");\n      const { data } = await axios({\n        method: \"POST\",\n        // url: \"http://localhost:5000/api/channel/page\",\n        url: \"https://youtube-app-server-app.herokuapp.com/api/channel/page\",\n\n        data: {\n          //   keyword: searchVal,\n          pageToken: mostRecent.prevPageToken,\n          // part:'snippet',\n          // playlistId:'UUzb8YnyvIzyRLGXARpUAZlg',\n          // key:'AIzaSyBKzTK79JJ_2CWcaiD-hFHXVNLSLUhpNq0',\n          // maxResults:5\n        },\n      });\n      console.log(\"searched data is\", data);\n      setMostRecent(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container container1 \">\n        <img\n          className=\"loadingGIF\"\n          width=\"5%\"\n          src={loadingGif}\n          alt=\"img\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      {/* <h1>My videos</h1> */}\n\n      {/* search form */}\n      <div className=\"searchDiv\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row frm\">\n            <div className=\"form-group col-lg-10 col-10\">\n              <input\n                required\n                className=\"inpt form-control\"\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                placeholder=\"Enter keyword\"\n              />\n            </div>\n            <div className=\"form-group col-lg-2 col-2\">\n              <button className=\"formButton btn \" type=\"submit\">\n                <i className=\"fas fa-search\"></i>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      {/* search form ends*/}\n\n      {/* toggle column grid */}\n      <div className=\"toggleColumns\">\n        {showOnlySearch ? (\n          <h1 className=\"heading\">Search Results</h1>\n        ) : (\n          <h1 className=\"heading\">My videos</h1>\n        )}\n        <button\n          className=\"toggleButton\"\n          onClick={() => setFourthColumn(!fourthColumn)}\n        >\n          <i className=\"fas fa-grip-horizontal\"></i>\n        </button>\n      </div>\n      {/* toggle column grid ends */}\n\n      {/* search video listings */}\n      <div className=\"row\">\n          {noResults ? (<p>No results found</p>) : (null)}\n        {searchedVideos && searchedVideos\n          ? searchedVideos.items.map((item) => {\n              return (\n                <div\n                  key={item.id.videoId}\n                  className={\n                    fourthColumn\n                      ? \"videoCard col-lg-3 col-sm-6\"\n                      : \"videoCard col-lg-4 col-sm-12\"\n                  }\n                >\n                  <div\n                    onClick={() =>\n                      handleShow(\n                        item.snippet.title,\n                        item.id.videoId,\n                        item.snippet.description,\n                        item.snippet.channelTitle\n                      )\n                    }\n                    className=\"thumbnailContainer\"\n                  >\n                    <img\n                      className=\"videoThumbnail\"\n                      src={item.snippet.thumbnails.medium.url}\n                      alt=\"thumbnail\"\n                    />\n                    <div className=\"overlayImg\">\n                      <p className=\"overlayText\">\n                        <i className=\"fab fa-youtube\"></i>\n                      </p>\n                    </div>\n                  </div>\n                  <p className=\"videoTitle\">{item.snippet.title}</p>\n                  <p className=\"channelTitle\">{item.snippet.channelTitle}</p>\n                  {/* <button\n                      onClick={() =>\n                        handleShow(\n                          item.snippet.title,\n                          item.snippet.resourceId.videoId\n                        )\n                      }\n                    >\n                      Play video\n                    </button> */}\n                  <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                      <Modal.Title>\n                        {modalTitle}\n                        <br></br>\n                        <p className=\"channelTitle\">{modalChannelTitle}</p>\n                      </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className=\"modalBody\">\n                      <div className=\"video-container\">\n                        <iframe\n                          src={`https://www.youtube.com/embed/${modalVideo}`}\n                          frameborder=\"0\"\n                          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                          allowfullscreen\n                        ></iframe>\n                      </div>\n                      <p className=\"videoDescriptionModal\">\n                        {modalDescription}\n                      </p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                      </Button>\n                    </Modal.Footer>\n                  </Modal>\n                  <p className=\"videoDescription\">{item.snippet.description}</p>\n                </div>\n              );\n            })\n          : null}\n      </div>\n      {/* search pagination  */}\n      {searchVal ? (\n        <div className=\"pagination\">\n          {searchedVideos && searchedVideos.prevPageToken ? (\n            <button\n              // href={`/page/${channelData.prevPageToken}`}\n              onClick={handlePrevious}\n              className=\"btn pageBtn\"\n            >\n              Previous\n            </button>\n          ) : null}\n\n          {searchedVideos && searchedVideos.nextPageToken ? (\n            <button\n              onClick={handleNext}\n              // href={`/page/${channelData.nextPageToken}`}\n              className=\"btn pageBtn\"\n            >\n              Next\n            </button>\n          ) : null}\n        </div>\n      ) : null}\n      {/* search pagination ends */}\n      {/* search  video listing ends */}\n\n      {/* most recent video listings */}\n      {showOnlySearch ? null : (\n        <div>\n          <div className=\"row\">\n            {mostRecent && mostRecent\n              ? mostRecent.items.map((item) => {\n                  return (\n                    <div\n                      key={item.id}\n                      className={\n                        fourthColumn\n                          ? \"videoCard col-lg-3 col-6\"\n                          : \"videoCard col-lg-4 col-12\"\n                      }\n                    >\n                      <div\n                        onClick={() =>\n                          handleShow(\n                            item.snippet.title,\n                            item.snippet.resourceId.videoId,\n                            item.snippet.description,\n                            item.snippet.channelTitle\n                          )\n                        }\n                        className=\"thumbnailContainer\"\n                      >\n                        <img\n                          className=\"videoThumbnail\"\n                          src={item.snippet.thumbnails.medium.url}\n                          alt=\"thumbnail\"\n                        />\n                        <div className=\"overlayImg\">\n                          <p className=\"overlayText\">\n                            <i className=\"fab fa-youtube\"></i>\n                          </p>\n                        </div>\n                      </div>\n                      <p className=\"videoTitle\">{item.snippet.title}</p>\n                      <p className=\"channelTitle\">\n                        {item.snippet.channelTitle}\n                      </p>\n                      {/* <button\n                      onClick={() =>\n                        handleShow(\n                          item.snippet.title,\n                          item.snippet.resourceId.videoId\n                        )\n                      }\n                    >\n                      Play video\n                    </button> */}\n                      <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                          <Modal.Title>\n                            {modalTitle}\n                            <br></br>\n                            <p className=\"channelTitle\">{modalChannelTitle}</p>\n                          </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body className=\"modalBody\">\n                          <div className=\"video-container\">\n                            <iframe\n                              src={`https://www.youtube.com/embed/${modalVideo}`}\n                              frameborder=\"0\"\n                              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                              allowfullscreen\n                            ></iframe>\n                          </div>\n                          <p className=\"videoDescriptionModal\">\n                            {modalDescription}\n                          </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                          <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                          </Button>\n                        </Modal.Footer>\n                      </Modal>\n                      <p className=\"videoDescription\">\n                        {item.snippet.description}\n                      </p>\n                    </div>\n                  );\n                })\n              : null}\n          </div>\n          {/* most Recent pagination  */}\n\n          <div className=\"pagination\">\n            {mostRecent && mostRecent.prevPageToken ? (\n              <button\n                // href={`/page/${channelData.prevPageToken}`}\n                onClick={handlePreviousUploads}\n                className=\"btn pageBtn\"\n              >\n                Previous\n              </button>\n            ) : null}\n\n            {mostRecent && mostRecent.nextPageToken ? (\n              <button\n                onClick={handleNextUploads}\n                // href={`/page/${channelData.nextPageToken}`}\n                className=\"btn pageBtn\"\n              >\n                Next\n              </button>\n            ) : null}\n          </div>\n\n          {/* most Recent pagination ends */}\n        </div>\n      )}\n\n      {/* most recent  video listing ends */}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../App.css\";\n// import { NavLink } from \"react-router-dom\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\n\nfunction Navigation() {\n  return (\n    <div className=\"  \">\n\n    \n    <Navbar\n      collapseOnSelect\n      className=\" navigation\"\n      expand=\"lg\"\n      bg=\"none\"\n      variant=\"dark\"\n      \n    >\n      <div className=\"container\">\n      <Navbar.Brand className=\"myLogo\" href=\"/\"><i className=\"fab fa-youtube\"></i> YouTube</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link style={{}}  className=\"aboutLink\" href=\"/\">My uploads</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      </div>\n    </Navbar>\n    </div>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport './App.css';\n// import { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from './components/Home';\nimport Navbar from './components/Navigation';\n\nfunction App() {\n  return (\n    // <Router>\n    <div className=\"\">\n      <header className=\"\">\n        <Navbar />\n      </header>\n      <Home />\n      {/* <Switch>\n        <Route path=\"/\" exact component={Home} />\n      </Switch> */}\n    </div>\n    // </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}